{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x694D4a2981Db02c8A75763200E94d771954e8b91",
    "txHash": "0x41e2e5e263037e3532b2da526972f82313967c468bf45470142db8bb46fdcba7"
  },
  "proxies": [
    {
      "address": "0x8D6d7DCBa0d8a6D1c9d0Bd64A62d6b0AE728B850",
      "txHash": "0x527361a4158728c7296d1030eee1befe0600dacfebe7b43cc6a038825a3f5c5d",
      "kind": "transparent"
    },
    {
      "address": "0x4Ba84de00a0E899B182B5d02257A6270113655D7",
      "txHash": "0xa9c9688d270e6f15d722ca15436d8f81077640df325258b76cbf8ea9bad09365",
      "kind": "transparent"
    },
    {
      "address": "0xDf0112F09d7bfb4fF499350BA76a8822F81EC792",
      "txHash": "0xa6e97106744e61211c4cfd1cf8e945ac5ad49e751c8c838b75199a200980bae6",
      "kind": "transparent"
    },
    {
      "address": "0x229653dad9Eb152DFF3477a1130aB81a67FB1D7C",
      "txHash": "0x848f21e974098d92005dff96747697d46d5158699c8c4f036b297b048b41730c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "ed95c082eb132ef1e8a1673b85a9baf430ef5e77898bc669403b327b6b2f3e26": {
      "address": "0xcb3795a8b63d4c104941852665f88c8Ff0f9F9E5",
      "txHash": "0x74e0cbea64a38049cb0d2a94f3c56bb935e9ce3802088c053a051a1c0e3f3982",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "_inSwapAndLiquify",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "TokenV4",
            "src": "contracts\\nodegrid\\TokenV4.sol:20"
          },
          {
            "label": "transferTaxRate",
            "offset": 1,
            "slot": "101",
            "type": "t_uint32",
            "contract": "TokenV4",
            "src": "contracts\\nodegrid\\TokenV4.sol:21"
          },
          {
            "label": "buyBackFee",
            "offset": 5,
            "slot": "101",
            "type": "t_uint32",
            "contract": "TokenV4",
            "src": "contracts\\nodegrid\\TokenV4.sol:22"
          },
          {
            "label": "operatorFee",
            "offset": 9,
            "slot": "101",
            "type": "t_uint32",
            "contract": "TokenV4",
            "src": "contracts\\nodegrid\\TokenV4.sol:23"
          },
          {
            "label": "liquidityFee",
            "offset": 13,
            "slot": "101",
            "type": "t_uint32",
            "contract": "TokenV4",
            "src": "contracts\\nodegrid\\TokenV4.sol:24"
          },
          {
            "label": "minAmountToLiquify",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "TokenV4",
            "src": "contracts\\nodegrid\\TokenV4.sol:25"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "TokenV4",
            "src": "contracts\\nodegrid\\TokenV4.sol:27"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "TokenV4",
            "src": "contracts\\nodegrid\\TokenV4.sol:28"
          },
          {
            "label": "isExcludedFromFee",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenV4",
            "src": "contracts\\nodegrid\\TokenV4.sol:29"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IUniswapV2Router02)3402",
            "contract": "TokenV4",
            "src": "contracts\\nodegrid\\TokenV4.sol:31"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "TokenV4",
            "src": "contracts\\nodegrid\\TokenV4.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IUniswapV2Router02)3402": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          }
        }
      }
    },
    "ce809e448c23a72422eb9551f3d78d3b9750690d59a7ed0817e09f58f5fefcc5": {
      "address": "0xCA06D085f28fFdA13ebeAD5bF10C25c401d586BA",
      "txHash": "0x780e761be1d7b031f71c3169b7ab5459bf60eec45276efdcead9f1629b37a539",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "tokenAddress",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:37"
          },
          {
            "label": "nftAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:38"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:39"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:40"
          },
          {
            "label": "tierArr",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_struct(Tier)6738_storage)dyn_storage",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:41"
          },
          {
            "label": "tierMap",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_string_memory_ptr,t_uint8)",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:42"
          },
          {
            "label": "tierTotal",
            "offset": 0,
            "slot": "6",
            "type": "t_uint8",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:43"
          },
          {
            "label": "nodesTotal",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_struct(Node)6755_storage)dyn_storage",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:44"
          },
          {
            "label": "nodesOfUser",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:45"
          },
          {
            "label": "countTotal",
            "offset": 0,
            "slot": "9",
            "type": "t_uint32",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:46"
          },
          {
            "label": "countOfUser",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_uint32)",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:47"
          },
          {
            "label": "countOfTier",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_string_memory_ptr,t_uint32)",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:48"
          },
          {
            "label": "rewardsTotal",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:49"
          },
          {
            "label": "rewardsOfUser",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:50"
          },
          {
            "label": "discountPer10",
            "offset": 0,
            "slot": "14",
            "type": "t_uint32",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:52"
          },
          {
            "label": "withdrawRate",
            "offset": 4,
            "slot": "14",
            "type": "t_uint32",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:53"
          },
          {
            "label": "transferFee",
            "offset": 8,
            "slot": "14",
            "type": "t_uint32",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:54"
          },
          {
            "label": "rewardsPoolFee",
            "offset": 12,
            "slot": "14",
            "type": "t_uint32",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:55"
          },
          {
            "label": "treasuryFee",
            "offset": 16,
            "slot": "14",
            "type": "t_uint32",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:56"
          },
          {
            "label": "operatorFee",
            "offset": 20,
            "slot": "14",
            "type": "t_uint32",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:57"
          },
          {
            "label": "maxCountOfUser",
            "offset": 24,
            "slot": "14",
            "type": "t_uint32",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:58"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "15",
            "type": "t_contract(IUniswapV2Router02)3402",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:60"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "16",
            "type": "t_address",
            "contract": "NodeManager",
            "src": "contracts\\nodegrid\\manager.sol:62"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_struct(Node)6755_storage)dyn_storage": {
            "label": "struct Node[]"
          },
          "t_array(t_struct(Tier)6738_storage)dyn_storage": {
            "label": "struct Tier[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IUniswapV2Router02)3402": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_mapping(t_string_memory_ptr,t_uint32)": {
            "label": "mapping(string => uint32)"
          },
          "t_mapping(t_string_memory_ptr,t_uint8)": {
            "label": "mapping(string => uint8)"
          },
          "t_string_memory_ptr": {
            "label": "string"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Node)6755_storage": {
            "label": "struct Node",
            "members": [
              {
                "label": "id",
                "type": "t_uint32"
              },
              {
                "label": "tierIndex",
                "type": "t_uint8"
              },
              {
                "label": "title",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "createdTime",
                "type": "t_uint32"
              },
              {
                "label": "claimedTime",
                "type": "t_uint32"
              },
              {
                "label": "limitedTime",
                "type": "t_uint32"
              },
              {
                "label": "multiplier",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(Tier)6738_storage": {
            "label": "struct Tier",
            "members": [
              {
                "label": "id",
                "type": "t_uint8"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "rewardsPerTime",
                "type": "t_uint256"
              },
              {
                "label": "claimInterval",
                "type": "t_uint32"
              },
              {
                "label": "maintenanceFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "3a875c4812da8713abb2326f2011ca41c02a15ad68a111e6f9008a9a3de723f0": {
      "address": "0x361FE9Bd0026aa44602c04C045Ab76fB45616d57",
      "txHash": "0xbf7a2da49655a2d690970812479bd3e43643c31e3f8bff4288a6f3ad3d54652e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "_inSwapAndLiquify",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "TokenV2",
            "src": "contracts\\nodegrid\\TokenV2.sol:20"
          },
          {
            "label": "transferTaxRate",
            "offset": 1,
            "slot": "101",
            "type": "t_uint32",
            "contract": "TokenV2",
            "src": "contracts\\nodegrid\\TokenV2.sol:21"
          },
          {
            "label": "buyBackFee",
            "offset": 5,
            "slot": "101",
            "type": "t_uint32",
            "contract": "TokenV2",
            "src": "contracts\\nodegrid\\TokenV2.sol:22"
          },
          {
            "label": "operatorFee",
            "offset": 9,
            "slot": "101",
            "type": "t_uint32",
            "contract": "TokenV2",
            "src": "contracts\\nodegrid\\TokenV2.sol:23"
          },
          {
            "label": "liquidityFee",
            "offset": 13,
            "slot": "101",
            "type": "t_uint32",
            "contract": "TokenV2",
            "src": "contracts\\nodegrid\\TokenV2.sol:24"
          },
          {
            "label": "minAmountToLiquify",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "TokenV2",
            "src": "contracts\\nodegrid\\TokenV2.sol:26"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "TokenV2",
            "src": "contracts\\nodegrid\\TokenV2.sol:28"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "TokenV2",
            "src": "contracts\\nodegrid\\TokenV2.sol:29"
          },
          {
            "label": "isExcludedFromFee",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenV2",
            "src": "contracts\\nodegrid\\TokenV2.sol:30"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IUniswapV2Router02)3402",
            "contract": "TokenV2",
            "src": "contracts\\nodegrid\\TokenV2.sol:32"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "TokenV2",
            "src": "contracts\\nodegrid\\TokenV2.sol:33"
          },
          {
            "label": "maxTransferAmount",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "TokenV2",
            "src": "contracts\\nodegrid\\TokenV2.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IUniswapV2Router02)3402": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          }
        }
      }
    },
    "431da4a201679f67840f89e10041d6b7cd25070bd6e9d65cbe94e8ddd0ec36ca": {
      "address": "0x470648Fa12412f3f5410a52412EFCE09eFCA5373",
      "txHash": "0x3a433900c28c3582b9a14f616cccd5f2c048b9b1b0d30c35eb95674b39edfe0c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "_inSwapAndLiquify",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "TokenV0305",
            "src": "contracts\\nodegrid\\TokenV3.sol:20"
          },
          {
            "label": "transferTaxRate",
            "offset": 1,
            "slot": "101",
            "type": "t_uint32",
            "contract": "TokenV0305",
            "src": "contracts\\nodegrid\\TokenV3.sol:21"
          },
          {
            "label": "buyBackFee",
            "offset": 5,
            "slot": "101",
            "type": "t_uint32",
            "contract": "TokenV0305",
            "src": "contracts\\nodegrid\\TokenV3.sol:22"
          },
          {
            "label": "operatorFee",
            "offset": 9,
            "slot": "101",
            "type": "t_uint32",
            "contract": "TokenV0305",
            "src": "contracts\\nodegrid\\TokenV3.sol:23"
          },
          {
            "label": "liquidityFee",
            "offset": 13,
            "slot": "101",
            "type": "t_uint32",
            "contract": "TokenV0305",
            "src": "contracts\\nodegrid\\TokenV3.sol:24"
          },
          {
            "label": "minAmountToLiquify",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "TokenV0305",
            "src": "contracts\\nodegrid\\TokenV3.sol:26"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "TokenV0305",
            "src": "contracts\\nodegrid\\TokenV3.sol:28"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "TokenV0305",
            "src": "contracts\\nodegrid\\TokenV3.sol:29"
          },
          {
            "label": "isExcludedFromFee",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenV0305",
            "src": "contracts\\nodegrid\\TokenV3.sol:30"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IUniswapV2Router02)3402",
            "contract": "TokenV0305",
            "src": "contracts\\nodegrid\\TokenV3.sol:32"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "TokenV0305",
            "src": "contracts\\nodegrid\\TokenV3.sol:33"
          },
          {
            "label": "maxTransferAmount",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "TokenV0305",
            "src": "contracts\\nodegrid\\TokenV3.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IUniswapV2Router02)3402": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          }
        }
      }
    },
    "34403329ea19d308c0fb762dd9cd4433dbc1f8ad80a4ae9baa726868c044532d": {
      "address": "0x8562f74d7eD5010b1fE46Bd84A2e8965C2022F83",
      "txHash": "0x670ae7dce2a5e1b5c03fe3b9f4d9f847fb541ed50cf38d851b62a53b398c74d1",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "_inSwapAndLiquify",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "Token",
            "src": "contracts\\nodegrid\\TokenV3.sol:31"
          },
          {
            "label": "transferTaxRate",
            "offset": 1,
            "slot": "101",
            "type": "t_uint32",
            "contract": "Token",
            "src": "contracts\\nodegrid\\TokenV3.sol:32"
          },
          {
            "label": "buyBackFee",
            "offset": 5,
            "slot": "101",
            "type": "t_uint32",
            "contract": "Token",
            "src": "contracts\\nodegrid\\TokenV3.sol:33"
          },
          {
            "label": "operatorFee",
            "offset": 9,
            "slot": "101",
            "type": "t_uint32",
            "contract": "Token",
            "src": "contracts\\nodegrid\\TokenV3.sol:34"
          },
          {
            "label": "liquidityFee",
            "offset": 13,
            "slot": "101",
            "type": "t_uint32",
            "contract": "Token",
            "src": "contracts\\nodegrid\\TokenV3.sol:35"
          },
          {
            "label": "minAmountToLiquify",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "Token",
            "src": "contracts\\nodegrid\\TokenV3.sol:37"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "Token",
            "src": "contracts\\nodegrid\\TokenV3.sol:39"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Token",
            "src": "contracts\\nodegrid\\TokenV3.sol:40"
          },
          {
            "label": "isExcludedFromFee",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Token",
            "src": "contracts\\nodegrid\\TokenV3.sol:41"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IUniswapV2Router02)3402",
            "contract": "Token",
            "src": "contracts\\nodegrid\\TokenV3.sol:43"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "Token",
            "src": "contracts\\nodegrid\\TokenV3.sol:44"
          },
          {
            "label": "maxTransferAmount",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Token",
            "src": "contracts\\nodegrid\\TokenV3.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IUniswapV2Router02)3402": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          }
        }
      }
    },
    "67260076cf96607ece9a90e935e6a6b968e570a4b46e752aedaeabff6f43ef16": {
      "address": "0x4d57AfAf8E19427c205da05Ae6cA52cF0914E8a4",
      "txHash": "0xcfcfe33efd0db8ef96a8bcc09da8a75e01d710002d13bc44d21dd3fac4e1a4ab",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "_inSwapAndLiquify",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "TokenV1",
            "src": "contracts\\nodegrid\\TokenV1.sol:29"
          },
          {
            "label": "transferTaxRate",
            "offset": 1,
            "slot": "101",
            "type": "t_uint32",
            "contract": "TokenV1",
            "src": "contracts\\nodegrid\\TokenV1.sol:30"
          },
          {
            "label": "buyBackFee",
            "offset": 5,
            "slot": "101",
            "type": "t_uint32",
            "contract": "TokenV1",
            "src": "contracts\\nodegrid\\TokenV1.sol:31"
          },
          {
            "label": "operatorFee",
            "offset": 9,
            "slot": "101",
            "type": "t_uint32",
            "contract": "TokenV1",
            "src": "contracts\\nodegrid\\TokenV1.sol:32"
          },
          {
            "label": "liquidityFee",
            "offset": 13,
            "slot": "101",
            "type": "t_uint32",
            "contract": "TokenV1",
            "src": "contracts\\nodegrid\\TokenV1.sol:33"
          },
          {
            "label": "minAmountToLiquify",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "TokenV1",
            "src": "contracts\\nodegrid\\TokenV1.sol:35"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "TokenV1",
            "src": "contracts\\nodegrid\\TokenV1.sol:37"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "TokenV1",
            "src": "contracts\\nodegrid\\TokenV1.sol:38"
          },
          {
            "label": "isExcludedFromFee",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenV1",
            "src": "contracts\\nodegrid\\TokenV1.sol:39"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IUniswapV2Router02)3480",
            "contract": "TokenV1",
            "src": "contracts\\nodegrid\\TokenV1.sol:41"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "TokenV1",
            "src": "contracts\\nodegrid\\TokenV1.sol:42"
          },
          {
            "label": "maxTransferAmount",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "TokenV1",
            "src": "contracts\\nodegrid\\TokenV1.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IUniswapV2Router02)3480": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          }
        }
      }
    }
  }
}
